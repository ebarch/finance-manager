package com.ebarch.financeManager.view;

import com.ebarch.financeManager.controller.CategoryController;
import com.ebarch.financeManager.controller.TransactionController;
import com.ebarch.financeManager.domain.Category;
import java.awt.GridLayout;
import java.text.NumberFormat;
import java.util.List;
import javax.swing.JScrollPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author Ed
 */
public class TransactionsByYearForm extends javax.swing.JFrame {
    
    private TransactionsByYearTable transactionsTable;
    private int year;

    /**
     * Creates new form TransactionsFor2012Form
     */
    public TransactionsByYearForm(int year) {
        this.year = year;
        
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        transactionsTablePanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        javax.swing.GroupLayout transactionsTablePanelLayout = new javax.swing.GroupLayout(transactionsTablePanel);
        transactionsTablePanel.setLayout(transactionsTablePanelLayout);
        transactionsTablePanelLayout.setHorizontalGroup(
            transactionsTablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1214, Short.MAX_VALUE)
        );
        transactionsTablePanelLayout.setVerticalGroup(
            transactionsTablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 433, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(transactionsTablePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(transactionsTablePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TransactionsByYearForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TransactionsByYearForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TransactionsByYearForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TransactionsByYearForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                //TransactionsFor2012Form transactionsFor2012Form = new TransactionsFor2012Form();
                //transactionsFor2012Form.setVisible(true);
                //transactionsFor2012Form.setLocationRelativeTo(null); 
                
                // create and display the table
                //transactionsFor2012Form.createTransactionsTableByYear(2012);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel transactionsTablePanel;
    // End of variables declaration//GEN-END:variables

    public void createTransactionsTableByYear() {
        TransactionController transactionController = new TransactionController();
        CategoryController categoryController = new CategoryController();
        
        // get all categories
        List<Category> categories = categoryController.getAllCategories();
        
        // create the table model
        Object[] columnNames = {"", "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December", "Yearly Total", "Monthly Average"};
        Object[][] transactionsData = new Object[categories.size()][15];
        
        NumberFormat numberFormat = NumberFormat.getCurrencyInstance();
        
        for (int i = 0; i < categories.size(); i++) {
            double yearlyTotal = 0.0;
            
            // category name
            transactionsData[i][0] = categories.get(i).getName();
            
            // total transactions for each month in that category
            for (int j = 0; j < 12; j++) {
                double monthlyTotal = transactionController.getTransactionsTotalByMonthYearCategory(j, this.year, categories.get(i).getId());
                transactionsData[i][j + 1] = numberFormat.format(monthlyTotal); 
                yearlyTotal += monthlyTotal;
            }
            
            // total for the year in that category
            transactionsData[i][13] = numberFormat.format(yearlyTotal);
            
            // monthly average for the year in that category
            transactionsData[i][14] = numberFormat.format(yearlyTotal / 12);
        }
        
        DefaultTableModel tableModel = new DefaultTableModel(transactionsData, columnNames);
        
        // create and show the new table
        transactionsTable = new TransactionsByYearTable(tableModel);
        
        // format table header
        JTableHeader tableHeader = transactionsTable.getTableHeader();
        TableColumnModel columnModel = tableHeader.getColumnModel();
        
        for (int i = 0; i < columnModel.getColumnCount(); i++) {
            columnModel.getColumn(i).setHeaderRenderer(new BoldCenteredCellRenderer());
        }
        
        //clear the articles panel of any previous content
        transactionsTablePanel.removeAll();
        
        
        // set column widths
        for (int i = 1; i < 13; i++) {
            transactionsTable.getColumnModel().getColumn(i).setMaxWidth(75);
            transactionsTable.getColumnModel().getColumn(i).setMinWidth(75);
        }
        transactionsTable.getColumnModel().getColumn(13).setMaxWidth(77);
        transactionsTable.getColumnModel().getColumn(13).setMinWidth(77);
        transactionsTable.getColumnModel().getColumn(14).setMaxWidth(120);
        transactionsTable.getColumnModel().getColumn(14).setMinWidth(120);
        
        transactionsTablePanel.add(new JScrollPane(transactionsTable));
        transactionsTablePanel.setLayout(new GridLayout());
        transactionsTablePanel.revalidate();
        transactionsTablePanel.repaint();
    }
}
