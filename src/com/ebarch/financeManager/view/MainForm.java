package com.ebarch.financeManager.view;

import com.ebarch.financeManager.controller.CategoryController;
import com.ebarch.financeManager.controller.DatabaseController;
import com.ebarch.financeManager.controller.TransactionController;
import com.ebarch.financeManager.domain.Transaction;
import com.ebarch.financeManager.util.TransactionTypeEnum;
import java.awt.GridLayout;
import java.text.DateFormat;
import java.text.NumberFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Ed
 */
public class MainForm extends javax.swing.JFrame {
    
    private RecentTransactionsTable recentTransactionsTable;

    /**
     * Creates new form MainForm
     */
    public MainForm() {
        initComponents();
        
        // populate transaction category combobox
        CategoryController categoryController = new CategoryController();
        DefaultComboBoxModel comboBoxModel = new DefaultComboBoxModel(categoryController.getAllCategoryNames().toArray());
        transactionCategoryComboBox.setModel(comboBoxModel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        transactionTypeButtonGroup = new javax.swing.ButtonGroup();
        addTransactionPanel = new javax.swing.JPanel();
        transactionAmountTextField = new javax.swing.JTextField();
        transactionAmountLabel = new javax.swing.JLabel();
        transactionCategoryLabel = new javax.swing.JLabel();
        transactionCreditRadioButton = new javax.swing.JRadioButton();
        transactionDebitRadioButton = new javax.swing.JRadioButton();
        transactionCategoryComboBox = new javax.swing.JComboBox();
        transactionAddTransactionButton = new javax.swing.JButton();
        transactionClearFormButton = new javax.swing.JButton();
        transactionDateComboBox = new datechooser.beans.DateChooserCombo();
        transactionDateLabel = new javax.swing.JLabel();
        transactionDescriptionTextField = new javax.swing.JTextField();
        transactionDescriptionLabel = new javax.swing.JLabel();
        recentTransactionsPanel = new javax.swing.JPanel();
        mainMenuBar = new javax.swing.JMenuBar();
        fileMenuItem = new javax.swing.JMenu();
        editMenuItem = new javax.swing.JMenu();
        transactionMenuItem = new javax.swing.JMenu();
        addTransactionMenuItem = new javax.swing.JMenuItem();
        transactionSummaryByYearMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Finance Manager");
        setName("mainFrame");

        addTransactionPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Add Transaction"));

        transactionAmountLabel.setText("Amount: $");

        transactionCategoryLabel.setText("Category:");

        transactionTypeButtonGroup.add(transactionCreditRadioButton);
        transactionCreditRadioButton.setText("Credit");

        transactionTypeButtonGroup.add(transactionDebitRadioButton);
        transactionDebitRadioButton.setText("Debit");

        transactionAddTransactionButton.setText("Add Transaction");
        transactionAddTransactionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transactionAddTransactionButtonActionPerformed(evt);
            }
        });

        transactionClearFormButton.setText("Clear Form");
        transactionClearFormButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transactionClearFormButtonActionPerformed(evt);
            }
        });

        transactionDateComboBox.setCurrentView(new datechooser.view.appearance.AppearancesList("Swing",
            new datechooser.view.appearance.ViewAppearance("custom",
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 16),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 16),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(0, 0, 255),
                    true,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 16),
                    new java.awt.Color(0, 0, 255),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 16),
                    new java.awt.Color(128, 128, 128),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.LabelPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 16),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.LabelPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 16),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(255, 0, 0),
                    false,
                    false,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                (datechooser.view.BackRenderer)null,
                false,
                true)));

    transactionDateLabel.setText("Date:");

    transactionDescriptionLabel.setText("Description:");

    javax.swing.GroupLayout addTransactionPanelLayout = new javax.swing.GroupLayout(addTransactionPanel);
    addTransactionPanel.setLayout(addTransactionPanelLayout);
    addTransactionPanelLayout.setHorizontalGroup(
        addTransactionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(addTransactionPanelLayout.createSequentialGroup()
            .addContainerGap()
            .addGroup(addTransactionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(addTransactionPanelLayout.createSequentialGroup()
                    .addComponent(transactionDescriptionLabel)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(transactionDescriptionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                    .addComponent(transactionAmountLabel)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(transactionAmountTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(addTransactionPanelLayout.createSequentialGroup()
                    .addComponent(transactionCategoryLabel)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(transactionCategoryComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(transactionDateLabel)
                    .addGap(18, 18, 18)
                    .addComponent(transactionDateComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addComponent(transactionDebitRadioButton)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(transactionCreditRadioButton))
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addTransactionPanelLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(transactionAddTransactionButton)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(transactionClearFormButton)))
            .addContainerGap())
    );
    addTransactionPanelLayout.setVerticalGroup(
        addTransactionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(addTransactionPanelLayout.createSequentialGroup()
            .addContainerGap()
            .addGroup(addTransactionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(transactionDescriptionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(transactionDescriptionLabel)
                .addComponent(transactionAmountLabel)
                .addComponent(transactionAmountTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(18, 18, 18)
            .addGroup(addTransactionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(addTransactionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(transactionCategoryLabel)
                    .addComponent(transactionCategoryComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(transactionDateLabel))
                .addGroup(addTransactionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(transactionDebitRadioButton)
                    .addComponent(transactionCreditRadioButton))
                .addComponent(transactionDateComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(addTransactionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(transactionClearFormButton)
                .addComponent(transactionAddTransactionButton))
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    recentTransactionsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Recent Transactions"));

    javax.swing.GroupLayout recentTransactionsPanelLayout = new javax.swing.GroupLayout(recentTransactionsPanel);
    recentTransactionsPanel.setLayout(recentTransactionsPanelLayout);
    recentTransactionsPanelLayout.setHorizontalGroup(
        recentTransactionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGap(0, 0, Short.MAX_VALUE)
    );
    recentTransactionsPanelLayout.setVerticalGroup(
        recentTransactionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGap(0, 162, Short.MAX_VALUE)
    );

    mainMenuBar.setMaximumSize(new java.awt.Dimension(173, 500));

    fileMenuItem.setText("File");
    mainMenuBar.add(fileMenuItem);

    editMenuItem.setText("Edit");
    mainMenuBar.add(editMenuItem);

    transactionMenuItem.setText("Transaction");

    addTransactionMenuItem.setText("Add...");
    addTransactionMenuItem.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            addTransactionMenuItemActionPerformed(evt);
        }
    });
    transactionMenuItem.add(addTransactionMenuItem);

    transactionSummaryByYearMenuItem.setText("Transaction Summary By Year...");
    transactionSummaryByYearMenuItem.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            transactionSummaryByYearMenuItemActionPerformed(evt);
        }
    });
    transactionMenuItem.add(transactionSummaryByYearMenuItem);

    mainMenuBar.add(transactionMenuItem);

    setJMenuBar(mainMenuBar);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                .addComponent(recentTransactionsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(addTransactionPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(addTransactionPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(18, 18, 18)
            .addComponent(recentTransactionsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addContainerGap())
    );

    pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addTransactionMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addTransactionMenuItemActionPerformed
        AddTransactionForm addTransactionForm = new AddTransactionForm();
        addTransactionForm.setVisible(true);
        addTransactionForm.setLocationRelativeTo(null);
    }//GEN-LAST:event_addTransactionMenuItemActionPerformed

    private void transactionClearFormButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transactionClearFormButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_transactionClearFormButtonActionPerformed

    private void transactionAddTransactionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transactionAddTransactionButtonActionPerformed
        if (!isValidNumber(transactionAmountTextField.getText())) {
            showErrorMessageDialog("Please enter a valid number for the Amount field.", "Invalid Amount");
        } else if (!(transactionCreditRadioButton.isSelected() || transactionDebitRadioButton.isSelected())) {
            showErrorMessageDialog("Please designate the transaction as debit or credit.", "Invalid Transaction Type");
        } else if (transactionCategoryComboBox.getSelectedItem() == null) {
            showErrorMessageDialog("Please choose a category for the transaction.", "Invalid Category");
        } else if (transactionDateComboBox.getDateFormat() == null) {
            showErrorMessageDialog("Please choose a date for the transaction.", "Invalid Date");
        } else {
            StringBuilder confirmationMessage = new StringBuilder();
            confirmationMessage.append("Confirm the following transaction?\n");
            confirmationMessage.append("\nAmount: ");
            NumberFormat numberFormat = NumberFormat.getCurrencyInstance();
            confirmationMessage.append(numberFormat.format(Double.parseDouble(transactionAmountTextField.getText())));
            confirmationMessage.append("\nDescription: ");
            confirmationMessage.append(transactionDescriptionTextField.getText());
            confirmationMessage.append("\nCategory: ");
            confirmationMessage.append(transactionCategoryComboBox.getSelectedItem());
            confirmationMessage.append("\nDate: ");
            confirmationMessage.append(transactionDateComboBox.getText());
            confirmationMessage.append("\nType: ");
            confirmationMessage.append(transactionCreditRadioButton.isSelected() ? "credit" : "debit");
            int transactionConfirmation = showOkCancelConfirmMessageDialog(confirmationMessage.toString(), "Confirm Transaction");
            
            if (transactionConfirmation == JOptionPane.OK_OPTION) {
                TransactionController transactionController = new TransactionController();
                int addTransactionResult = transactionController.addTransaction(createTransactionObject(), transactionCategoryComboBox.getSelectedItem().toString());
                
                if (addTransactionResult == 1) {
                    showInformationMessageDialog("Transaction was added successfully.", "Success");
                } else {
                    showErrorMessageDialog("An error occurred and the transaction was not added.", "Failure");
                }
            } 
            
            // display the Recent Transactions table
            Calendar thirtyDaysAgo = Calendar.getInstance();
            thirtyDaysAgo.add(Calendar.DATE, -30);
            TransactionController transactionController = new TransactionController();
            List<Transaction> transactions = transactionController.getAllTransactionsSince(thirtyDaysAgo);
            createRecentTransactionsTable(transactions);
        }
    }//GEN-LAST:event_transactionAddTransactionButtonActionPerformed

    private void transactionSummaryByYearMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transactionSummaryByYearMenuItemActionPerformed
        // get year from user
        String year = showInputMessageDialog("Enter the year.", "Enter Year");
        
        TransactionsByYearForm transactionsByYearForm = new TransactionsByYearForm(Integer.parseInt(year));
        transactionsByYearForm.setVisible(true);
        transactionsByYearForm.setLocationRelativeTo(null);
        transactionsByYearForm.setTitle("Transactions Summary for " + year);
        transactionsByYearForm.createTransactionsTableByYear();
    }//GEN-LAST:event_transactionSummaryByYearMenuItemActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                // create the database if it doesn't exist
                //DatabaseController.createDatabase();
                
                // display the main form
                MainForm mainForm = new MainForm();
                mainForm.setVisible(true);
                mainForm.setLocationRelativeTo(null); 
                
                // display the Recent Transactions table
                Calendar thirtyDaysAgo = Calendar.getInstance();
                thirtyDaysAgo.add(Calendar.DATE, -30);
                TransactionController transactionController = new TransactionController();
                List<Transaction> transactions = transactionController.getAllTransactionsSince(thirtyDaysAgo);
                mainForm.createRecentTransactionsTable(transactions);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem addTransactionMenuItem;
    private javax.swing.JPanel addTransactionPanel;
    private javax.swing.JMenu editMenuItem;
    private javax.swing.JMenu fileMenuItem;
    private javax.swing.JMenuBar mainMenuBar;
    private javax.swing.JPanel recentTransactionsPanel;
    private javax.swing.JButton transactionAddTransactionButton;
    private javax.swing.JLabel transactionAmountLabel;
    private javax.swing.JTextField transactionAmountTextField;
    private javax.swing.JComboBox transactionCategoryComboBox;
    private javax.swing.JLabel transactionCategoryLabel;
    private javax.swing.JButton transactionClearFormButton;
    private javax.swing.JRadioButton transactionCreditRadioButton;
    private datechooser.beans.DateChooserCombo transactionDateComboBox;
    private javax.swing.JLabel transactionDateLabel;
    private javax.swing.JRadioButton transactionDebitRadioButton;
    private javax.swing.JLabel transactionDescriptionLabel;
    private javax.swing.JTextField transactionDescriptionTextField;
    private javax.swing.JMenu transactionMenuItem;
    private javax.swing.JMenuItem transactionSummaryByYearMenuItem;
    private javax.swing.ButtonGroup transactionTypeButtonGroup;
    // End of variables declaration//GEN-END:variables

    private boolean isValidNumber(String text) {
        if (text == null) {
            return false;
        }
        
        try {
            Double.parseDouble(text);
        } catch (Exception ex) {
            return false;
        }     
        
        return true;
    }
    
    private void showErrorMessageDialog(String message, String title) {
        JOptionPane.showMessageDialog(null, message, title, JOptionPane.ERROR_MESSAGE);
    }
    
    private void showInformationMessageDialog(String message, String title) {
        JOptionPane.showMessageDialog(null, message, title, JOptionPane.INFORMATION_MESSAGE);
    }
    
    private int showOkCancelConfirmMessageDialog(String message, String title) {
        return JOptionPane.showConfirmDialog(null, message, title, JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE);
    }
    
    private String showInputMessageDialog(String message, String title) {
        return JOptionPane.showInputDialog(null, message, title, JOptionPane.QUESTION_MESSAGE);
    }
    
    private Transaction createTransactionObject() {
        Transaction transaction = new Transaction();
        transaction.setAmount(Double.parseDouble(transactionAmountTextField.getText()));
        transaction.setDescription(transactionDescriptionTextField.getText());
        transaction.setDate(transactionDateComboBox.getSelectedDate());
        transaction.setType(transactionCreditRadioButton.isSelected() ? TransactionTypeEnum.CREDIT : TransactionTypeEnum.DEBIT);
        return transaction;
    }   
    
    public void createRecentTransactionsTable(List<Transaction> transactions) {
        // create the table model
        Object[] columnNames = {"Date", "Category", "Description", "Amount", "Type", "Transaction Id"};
        Object[][] transactionsData = new Object[transactions.size()][6];
        
        DateFormat dateFormat = new SimpleDateFormat("MM/dd/yyyy");
        NumberFormat numberFormat = NumberFormat.getCurrencyInstance();
        
        for (int i = 0; i < transactions.size(); i++) {
            transactionsData[i][0] = dateFormat.format(transactions.get(i).getDate().getTime());
            transactionsData[i][1] = transactions.get(i).getCategory().getName();
            transactionsData[i][2] = transactions.get(i).getDescription();
            transactionsData[i][3] = numberFormat.format(transactions.get(i).getAmount());
            transactionsData[i][4] = transactions.get(i).getType();
            transactionsData[i][5] = transactions.get(i).getId();
        }

        DefaultTableModel tableModel = new DefaultTableModel(transactionsData, columnNames);

        //clear the articles panel of any previous content
        recentTransactionsPanel.removeAll();

        // create and show the new table
        recentTransactionsTable = new RecentTransactionsTable(tableModel);
        recentTransactionsTable.removeColumn(recentTransactionsTable.getColumnModel().getColumn(5));
        recentTransactionsTable.getColumnModel().getColumn(4).setMaxWidth(50);
        recentTransactionsTable.getColumnModel().getColumn(4).setMinWidth(50);
        recentTransactionsTable.getColumnModel().getColumn(3).setMaxWidth(75);
        recentTransactionsTable.getColumnModel().getColumn(3).setMinWidth(75);
        recentTransactionsTable.getColumnModel().getColumn(0).setMaxWidth(80);
        recentTransactionsTable.getColumnModel().getColumn(0).setMinWidth(80);
        recentTransactionsTable.getColumnModel().getColumn(1).setMaxWidth(120);
        recentTransactionsTable.getColumnModel().getColumn(1).setMinWidth(120);
        recentTransactionsPanel.add(new JScrollPane(recentTransactionsTable));
        recentTransactionsPanel.setLayout(new GridLayout());
        recentTransactionsPanel.revalidate();
        recentTransactionsPanel.repaint();
    }
}
